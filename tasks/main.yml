- set_fact:  
    command_env: {}

- name: Add apt KIT repository key ubuntu
  apt_key:
    url: https://repo.data.kit.edu/repo-data-kit-edu-key.gpg
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Add apt KIT repository key debian
  get_url:
    url: https://repo.data.kit.edu/repo-data-kit-edu-key.gpg
    dest: /etc/apt/trusted.gpg.d/kitrepo-archive.asc
  when: ansible_distribution == "Debian"

- name: Add apt KIT repository ubuntu
  apt_repository:
    repo: deb https://repo.data.kit.edu/ubuntu/{{ansible_distribution_version}} ./
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Add apt KIT repository debian
  apt_repository:
    repo: deb [signed-by=/etc/apt/trusted.gpg.d/kitrepo-archive.asc] https://repo.data.kit.edu/debian/{{ansible_distribution_version}} ./
    state: present
  when: ansible_distribution == "Debian"

- name: Ensure EPEL is installed.
  package:
    name: epel-release
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora" and ansible_distribution_major_version|int < 9

- name: Add yum KIT repository CentOS
  get_url:
    url: https://repo.data.kit.edu/data-kit-edu-centos{{ansible_distribution_major_version}}.repo
    dest: /etc/yum.repos.d/data-kit-edu-centos{{ansible_distribution_major_version}}.repo
  when: ansible_distribution == "CentOS" and ansible_distribution_release != "Stream"

- name: Add yum KIT repository CentOS Stream
  get_url:
    url: https://repo.data.kit.edu/data-kit-edu-centos-stream.repo
    dest: /etc/yum.repos.d/data-kit-edu-centos-stream.repo
  when: ansible_distribution == "CentOS" and ansible_distribution_release == "Stream"

- name: Install pyyaml in CentOS 8
  yum:
    name: https://cbs.centos.org/kojifiles/packages/PyYAML/5.4.1/2.el8/x86_64/python3-pyyaml-5.4.1-2.el8.x86_64.rpm
    disable_gpg_check: yes
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

- name: Install centos-release-scl in CentOS 7
  yum:
    name: centos-release-scl
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Install python38 in CentOS 7
  yum:
    name: rh-python38
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Enable python38 pip in CentOS 7
  file:
    src: /opt/rh/rh-python38/root/usr/bin/pip3
    dest: /usr/bin/pip3
    state: link
    force: yes
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Install motley-cue and pam-ssh-oidc
  package:
    name:
      - motley-cue
      - pam-ssh-oidc
      - pam-ssh-oidc-autoconfig

- name: Install oidc-agent-cli
  package:
    name: oidc-agent-cli
  ignore_errors: true

- name: Ensure Pip is installed.
  package:
    name: python3-pip
    state: present
  when: not (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")
  
- name: Install contextualise_ssh_server
  pip:
    name: contextualise_ssh_server
    executable: pip3

- name: Enable contextualise_ssh_server in CentOS 7
  file:
    src: /opt/rh/rh-python38/root/usr/local/bin/contextualise_ssh_server
    dest: /usr/bin/contextualise_ssh_server
    state: link
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Enable OIDC in PAM
  lineinfile:
    path: /etc/pam.d/sshd
    regexp: 'pam_oidc_token.so'
    line: auth   sufficient pam_oidc_token.so config=/etc/pam.d/pam-ssh-oidc-config.ini
    create: yes
    insertbefore: BOF

- name: Create a directory /opt/motley_cue
  ansible.builtin.file:
    path: /opt/motley_cue
    state: directory
    mode: '0755'

- name: set SSH_AUTHORISE_OTHERS_IN_MY_VO
  set_fact:
    command_env: "{{ command_env | combine ({ 'SSH_AUTHORISE_OTHERS_IN_MY_VO' : 1 }) }}"
  when: ssh_oidc_my_vo

- name: set SSH_AUTHORISE_VOS
  set_fact:
    command_env: "{{ command_env | combine ({ 'SSH_AUTHORISE_VOS' : ['urn:mace:egi.eu:group:{{ssh_oidc_other_vos}}:role=member#aai.egi.eu'] }) }}"
  when: ssh_oidc_other_vos != ''

- name: Execute contextualise_ssh_server command
  command: contextualise_ssh_server {{IM_INFRASTRUCTURE_AUTH}}
  args:
    chdir: /opt/motley_cue
    creates: /opt/motley_cue/motley_cue.conf
  when: IM_INFRASTRUCTURE_AUTH is defined and IM_INFRASTRUCTURE_AUTH is not search(":")
  register: contextualise_ssh_server
  environment: "{{command_env}}"

- name: Copy conf files to /etc
  copy:
    src: /opt/motley_cue/{{item}}
    dest: /etc/motley_cue/{{item}}
    remote_src: yes
  loop:
    - motley_cue.conf
    - feudal_adapter.conf
  notify: Restart motley-cue
  when: contextualise_ssh_server is changed

- name: Enable PAM in SSHD
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '{{item}}'
    state: absent
  loop:
    - 'ChallengeResponseAuthentication no'
    - 'KbdInteractiveAuthentication no'
    - 'UsePAM no'
  notify: Restart sshd

- name: Enable PAM in SSHD
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '{{item}}'
    line: '{{item}} yes'
  loop:
    - ChallengeResponseAuthentication
    - KbdInteractiveAuthentication
    - UsePAM
  notify: Restart sshd
