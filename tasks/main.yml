- set_fact:  
    command_env: {}

- name: Include {{ansible_distribution}} tasks
  include_tasks: "{{ansible_distribution}}.yml"

- name: Install motley-cue and pam-ssh-oidc
  package:
    name:
      - motley-cue
      - pam-ssh-oidc
      - pam-ssh-oidc-autoconfig

- name: Link python
  raw: ls /usr/bin/python || { ls /usr/bin/python3 && ln -s /usr/bin/python3 /usr/bin/python; }
  changed_when: false

- name: Install oidc-agent-cli
  package:
    name: oidc-agent-cli

# xref: https://github.com/geerlingguy/ansible-role-pip/
- name: Install pip
  package:
    name: python3-pip

- name: Install PyYAML
  pip:
    name: PyYAML
    executable: pip3
    extra_args: --ignore-installed
  changed_when: false

- name: Install contextualise_ssh_server
  pip:
    name: contextualise_ssh_server
    executable: pip3

- name: Enable OIDC in PAM
  lineinfile:
    path: /etc/pam.d/sshd
    regexp: 'pam_oidc_token.so'
    line: auth   sufficient pam_oidc_token.so config=/etc/pam.d/pam-ssh-oidc-config.ini
    create: yes
    insertbefore: BOF

- name: Create a directory /opt/motley_cue
  ansible.builtin.file:
    path: /opt/motley_cue
    state: directory
    mode: '0755'

- name: set SSH_AUTHORISE_OTHERS_IN_MY_VO
  set_fact:
    command_env: "{{ command_env | combine ({ 'SSH_AUTHORISE_OTHERS_IN_MY_VO' : 1 }) }}"
  when: ssh_oidc_my_vo

- block:

  # Refernce:
  # https://docs.egi.eu/users/aai/check-in/vos/expressing-vo-information/
  - name: set eduPersonEntitlement
    set_fact:
      eduPersonEntitlement: >-
        {{ssh_oidc_other_vos_namespace}}
        :group
        :{{ssh_oidc_other_vos_name}}
        {%for group in ssh_oidc_other_vos_groups %}
        :{{group}}
        {% endfor %}
        {% if ssh_oidc_other_vos_role != '' %}
        :role={{ssh_oidc_other_vos_role}}
        {% endif %}
        #{{ssh_oidc_other_vos_authority}}

  - name: Clean up and show eduPersonEntitlement that will be used
    debug:
      msg: "{{ eduPersonEntitlement | replace(' ','') }}"
    register: eduPersonEntitlement_trimmed

  - name: set SSH_AUTHORISE_VOS
    set_fact:
      command_env: "{{ command_env | combine ({ 'SSH_AUTHORISE_VOS' : ['{{ eduPersonEntitlement_trimmed.msg }}'] }) }}"

  when: ssh_oidc_other_vos_name != ''

- name: Set access token with IM for contextualise_ssh_server
  set_fact:
    OIDC_ACCESS_TOKEN: "{{ IM_INFRASTRUCTURE_AUTH }}"
  when: IM_INFRASTRUCTURE_AUTH is defined and IM_INFRASTRUCTURE_AUTH is not search(":")

- name: Set access token as extra-var for contextualise_ssh_server
  set_fact:
    OIDC_ACCESS_TOKEN: "{{ ACCESS_TOKEN }}"
  when: ACCESS_TOKEN is defined

- name: Fail if OIDC_ACCESS_TOKEN is not set
  ansible.builtin.fail:
    msg: An OIDC access token is required to configure motley-cue with contextualise_ssh_server
  when: OIDC_ACCESS_TOKEN is not defined

- name: Execute contextualise_ssh_server command
  command: contextualise_ssh_server {{OIDC_ACCESS_TOKEN}}
  args:
    chdir: /opt/motley_cue
  register: contextualise_ssh_server
  when: OIDC_ACCESS_TOKEN is defined
  environment: "{{command_env}}"

- name: Copy conf files to /etc
  copy:
    src: /opt/motley_cue/{{item}}
    dest: /etc/motley_cue/{{item}}
    remote_src: yes
  loop:
    - motley_cue.conf
    - feudal_adapter.conf
  notify: Restart motley-cue
  when: contextualise_ssh_server is changed

- name: Enable PAM in SSHD
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '{{item}}'
    state: absent
  loop:
    - 'ChallengeResponseAuthentication no'
    - 'KbdInteractiveAuthentication no'
    - 'UsePAM no'
  notify: Restart sshd

- name: Enable PAM in SSHD
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '{{item}}'
    line: '{{item}} yes'
  loop:
    - ChallengeResponseAuthentication
    - KbdInteractiveAuthentication
    - UsePAM
  notify: Restart sshd
